import java.io.*;
import java.util.*;
class Node {
    int value;
    Node left,right;
    Node (int value){
        this.value=value;
        this.left=null;
        this.right=null;
    }
}
public class DigitalTree{
    static Node buildTree(String[] values){
        if(values.length == 0 || values[0] == "null"){
            return null;
        }
        Node root = new Node(Integer.parseInt(values[0]));
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        int i=1;
        while(!q.isEmpty() && ! values.equals("null")){
            Node current = q.poll();//current=1|2->poll|[3]|3->poll|
            if(i<values.length && !values[i].equals("null")){
                current.left = new Node(Integer.parseInt(values[i]));//2|4
                q.add(current.left);//[2->poll]|[3,4]|[4,5,6]
            }
            i++;//i=2|4|6
            if(i<values.length && !values[i].equals("null")){
                current.right = new Node(Integer.parseInt(values[i]));//3|node 5|node 6|node 7
                q.add(current.right);//[2->poll,3]|[3,4,5]|[4,5,6,7]|
            }
            i++;//i=3|5|7
        }
        return root;
    }
    static int findSum(Node root,int current){// current=1
        if(root == null){
            return 0;
        }
        current = current*10 + root.value;//1*10+2=12|12*10+4=124
        if(root.left==null && root.right == null)
            return current;
        //sum(2,1)
        return findSum(root.left,current)+findSum(root.right,current);
        
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n = Integer.parseInt(sc.nextLine());
        String[] values = sc.nextLine().split(" ");
        Node root = buildTree(values);
        int Sum = findSum(root,0);
        System.out.println(Sum);
    }
}

