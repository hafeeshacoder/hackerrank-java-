import java.util.*;

public class InfixToPostfixSimple {

    // simple precedence function
    static int precedence(char ch) {
        if (ch == '+' || ch == '-'){
            return 1;
        }
        else if (ch == '*' || ch == '/') {
            return 2;
        }
        return -1;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String infix = sc.nextLine();   // read input expression
        String postfix = "";            // final result

        char[] stack = new char[infix.length()];   // simple array for stack
        int top = -1;                   // top pointer

        // go through each character
        for (int i = 0; i < infix.length(); i++) {
            char c = infix.charAt(i);

            if (c == ' '){
                
             continue; 
            }// skip spaces

            // if operand, add to result
            if (Character.isLetter(c)||Character.isDigit(c)) {
                postfix += c + " ";
            }
            // if '(', push to stack
            else if (c == '(') {
                stack[++top] = c;
            }
            // if ')', pop until '('
            else if (c == ')') {
                while (top >= 0 && stack[top] != '(') {
                    postfix += stack[top--] + " ";
                }
                top--; // remove '('
            }
            // if operator
            else {
                while (top >= 0 && precedence(stack[top]) >= precedence(c)) {
                    postfix += stack[top--] + " ";
                }
                stack[++top] = c;
            }
        }

        // pop all remaining operators
        while (top >= 0) {
            postfix += stack[top--] + " ";
        }

        System.out.println(postfix.trim()); // print result
    }
}
